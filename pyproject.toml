[build-system]
requires = ["hatchling", "versioningit"]
build-backend = "hatchling.build"

[project]
name = "adni_classification"
dynamic = ["version"]
description = "ADNI MRI Classification using MONAI and PyTorch"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    { name = "Tin Hoang" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
]

dependencies = [
    "torch>=2.0.0",
    "monai>=1.2.0",
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "matplotlib>=3.4.0",
    "seaborn>=0.12.0",
    "tqdm>=4.62.0",
    "pyyaml>=6.0",
    "requests>=2.28.0",
    "nibabel>=5.2.1",
    "wandb>=0.15.0",
    "flwr[simulation]>=1.18.0",
    "flwr-datasets[vision]>=0.5.0",
    "filelock>=3.15.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "mypy>=1.15.0",
    "ruff>=0.1.0",
]

[tool.versioningit]
method = "pep440"
default-version = "0.1.0"

[tool.versioningit.format]
distance = "{base_version}.post{distance}+{vcs}{rev}"
dirty = "{base_version}+d{build_date:%Y%m%d}"
distance-dirty = "{base_version}.post{distance}+{vcs}{rev}.d{build_date:%Y%m%d}"

[tool.versioningit.vcs]
method = "git"
default-tag = "0.1.0"

[tool.versioningit.tag2version]
rmprefix = "v"

[tool.hatch.version]
source = "versioningit"

# Tools settings: pre-commit ----------------------------------------------------------------------
[tool.ruff]
# https://docs.astral.sh/ruff/configuration/
line-length = 120
indent-width = 4

[tool.ruff.lint]
# see: https://docs.astral.sh/ruff/rules
select = [
     "F", # Pyflakes
     "E", # Pycodestyle
     "W", # Pycodestyle
     "I", # Isort
     "B", # Flake8-bugbear
     "C4", # Flake8-comprehensions
]
ignore = [
    "E731", # Do not assign a lambda expression, use a def
    "E741", # Do not use variables named 'I', 'O', or 'l'
    "C408", # Unnecessary <dict/list/tuple> call - rewrite as a literal
    "W191", # Indentation contains tabs (incompatible with `format.indent-style="tab"`)
    "C401", # Unnecessary generator (rewrite as a `set` comprehension)
    "A005", # Unnecessary `any` type
    "ANN401",  # any-type
    "B008", # Unnecessary `self` parameter
    "C901",  # complex-structure
    "EM101",  # Raw string in exception
    "EM102",  # F-string in exception
    "FA102",  # Future required type annotation
    "FIX002",  # Line contains todo
    "N815",  # Mixed-case variable in class scope
    "PLR0911",  # Too many return statements
    "PLR0913",  # Too many arguments
    "RUF001",  # Ambiguous unicode character string
    "S105", # Missing docstring in magic method
]
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=adni_classification --cov-report=term-missing"

[tool.hatch.build.targets.wheel]
packages = ["adni_classification", "adni_flwr"]

[project.urls]
"Homepage" = "https://github.com/tin-hoang/fl-adni-classification"
"Bug Tracker" = "https://github.com/tin-hoang/fl-adni-classification/issues"

[tool.flwr.app]
publisher = "tin-hoang"

[tool.flwr.app.components]
serverapp = "adni_flwr.server_app:app"
clientapp = "adni_flwr.client_app:app"

[tool.flwr.app.config]
client-config-files = "configs/fl-rosanna-3T_P1-trainval_1035images-2classes-3clients-fedavg/client1.yaml,configs/fl-rosanna-3T_P1-trainval_1035images-2classes-3clients-fedavg/client2.yaml,configs/fl-rosanna-3T_P1-trainval_1035images-2classes-3clients-fedavg/client3.yaml"
server-config-file = "configs/fl-rosanna-3T_P1-trainval_1035images-2classes-3clients-fedavg/fl_server.yaml"

[tool.flwr.federations]
default = "local-simulation-gpu"

[tool.flwr.federations.local-simulation-gpu]
options.num-supernodes = 3
options.backend.client-resources.num-cpus = 8
options.backend.client-resources.num-gpus = 0.33
options.backend.ray-config.max-restarts = 3
options.backend.ray-config.max-task-retries = 3

[tool.flwr.federations.multi-machine]
address = "127.0.0.1:9093"
insecure = true
options.num-supernodes = 3
options.backend.client-resources.num-cpus = 10
options.backend.client-resources.num-gpus = 1.0
options.backend.ray-config.max-restarts = 3
options.backend.ray-config.max-task-retries = 3
